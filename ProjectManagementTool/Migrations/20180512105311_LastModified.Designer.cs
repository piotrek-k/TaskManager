// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ProjectManagementTool.Models;
using System;

namespace ProjectManagementTool.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180512105311_LastModified")]
    partial class LastModified
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectManagementTool.Models.DbModels.Column", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LongTermGoalId");

                    b.Property<string>("Name");

                    b.Property<int>("OrderIndex");

                    b.HasKey("Id");

                    b.HasIndex("LongTermGoalId");

                    b.ToTable("Columns");
                });

            modelBuilder.Entity("ProjectManagementTool.Models.DbModels.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("ProjectId");

                    b.Property<string>("URL");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("ProjectManagementTool.Models.DbModels.LongTermGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("LastModified");

                    b.Property<string>("Name");

                    b.Property<int>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("LongTermGoals");
                });

            modelBuilder.Entity("ProjectManagementTool.Models.DbModels.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("LastModified");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ProjectManagementTool.Models.DbModels.TodoTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ColumnId");

                    b.Property<string>("Content");

                    b.Property<DateTimeOffset?>("Date");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.ToTable("TodoTasks");
                });

            modelBuilder.Entity("ProjectManagementTool.Models.DbModels.Column", b =>
                {
                    b.HasOne("ProjectManagementTool.Models.DbModels.LongTermGoal", "LongTermGoal")
                        .WithMany("Columns")
                        .HasForeignKey("LongTermGoalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectManagementTool.Models.DbModels.Link", b =>
                {
                    b.HasOne("ProjectManagementTool.Models.DbModels.Project", "Project")
                        .WithMany("Links")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectManagementTool.Models.DbModels.LongTermGoal", b =>
                {
                    b.HasOne("ProjectManagementTool.Models.DbModels.Project", "Project")
                        .WithMany("LongTermGoals")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectManagementTool.Models.DbModels.TodoTask", b =>
                {
                    b.HasOne("ProjectManagementTool.Models.DbModels.Column", "Column")
                        .WithMany("TodoTasks")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
